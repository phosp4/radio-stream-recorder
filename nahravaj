#!/bin/sh

CONFIG='radio_config.env'

list_stations() {

	COUNTER=0

	while read -r URL	# -r to remove \n
	do
		COUNTER="$((COUNTER+1))"
		printf "%-3s %-15s %-20s\n" "$COUNTER" "$(number_to_station_name "$COUNTER")" "$(number_to_station_url "$COUNTER")"
	done < "$CONFIG"
}

start_recording() {
	check_if_empty "$1"
	check_if_valid_number "$1"

	URL=$(number_to_station_url "$1")
	RADIO_NAME=$(number_to_station_name "$1")

	if [ ! -d "$RADIO_NAME" ]
	then
		echo "Creating a folder $RADIO_NAME"
		mkdir "$RADIO_NAME"
	fi

	START_TIME=$(date '+%y-%m-%d_%H-%M-%S')

	echo "Starting recording process..."
	trap 'end_recording "$RADIO_NAME" "$START_TIME"' INT
	wget -O "${RADIO_NAME}/recording.mp3" "$URL"
}

end_recording() {
    RADIO_NAME="$1"
    START_TIME="$2"

	# adding end time of the recording
	END_TIME=$(date '+%y-%m-%d_%H-%M-%S')
	FILENAME="${RADIO_NAME}_${START_TIME}_${END_TIME}.mp3"
	mv "${RADIO_NAME}/recording.mp3" "${RADIO_NAME}/$FILENAME"
	echo " Ending recording process..."
	exit 0
}

list_recordings() {

	# header
	printf "%-15s %-12s %-15s %-12s %-10s\n" "STATION:" "START DATE:" "START TIME:" "END DATE:" "END TIME:"

	# if first parameter is empty
	if [ -z "$1" ]
	then # list all files

		# iterate through each station folder
		for NUMBER in $(seq 1 "$(wc -l < "$CONFIG")"); do
			list_recordings_of_station "$NUMBER"
		done

	else # list one station files
		check_if_empty "$1"
		check_if_valid_number "$1"
		list_recordings_of_station "$1"
	fi
}

list_recordings_of_station() {

	STATION=$(number_to_station_name "$1")

	# check if file exists
	if [ ! -d "${STATION}" ]; then
	echo "No records exists!"
	fi

	# iterate files in folder
	for FILE in "${STATION}"/*
	do
		if [ -f "$FILE" ]; then # list information about each file

			# parse the information according our naming convention
			NAME=$(echo "$FILE" | cut -d "_" -f1 | cut -d "/" -f2)
			START_DATE=$(echo "$FILE" | cut -d "_" -f2)
			START_TIME=$(echo "$FILE" | cut -d "_" -f3 | tr '-' ':')

			END_DATE=$(echo "$FILE" | cut -d "_" -f4)
			END_TIME=$(echo "$FILE" | cut -d "_" -f5 | cut -d "." -f1 | tr '-' ':')

			printf "%-15s %-12s %-15s %-12s %-10s\n" "$NAME" "$START_DATE" "$START_TIME" "$END_DATE" "$END_TIME"
		fi
	done
}

number_to_station_name() {
	check_if_empty "$1"
	check_if_valid_number "$1"

	NAME_URL=$(head -n "$1" "$CONFIG" | tail -n 1) # tail takes only the last line
	#echo "$NAME_URL"

	echo "$NAME_URL" | cut -d ' ' -f 1 # 1 is station name and 2 is url
}

number_to_station_url() {
	check_if_empty "$1"
	check_if_valid_number "$1"

	NAME_URL=$(head -n "$1" "$CONFIG" | tail -n 1)
	echo "$NAME_URL" | cut -d ' ' -f 2 # 1 is station name and 2 is url
}

# input validation
check_if_empty() {

	if [ -z "$1" ]
	then
		echo "No value specified!"
		exit 1
	fi
}

# input validation
check_if_valid_number() {
	if ! [ "$1" -eq "$1" ] 2>/dev/null; then	# inspired by chatgpt.com
		echo "Invalid number!"
		exit 1
	fi
	if [ 0 -ge "$1" ]; then
		echo "Negative numbers and 0 not allowed!"
		exit 1
	fi
}

# check the configuration file
if [ ! -e "$CONFIG" ]; then
	echo "Configuration file missing!"
	exit 1
fi

case "$1" in
	-l)
		list_stations
		;;
	-r)
		start_recording "$2"
		;;
	-s)
		list_recordings "$2"
		;;
	*)
		echo "Invalid option"
		exit 1
		;;
esac